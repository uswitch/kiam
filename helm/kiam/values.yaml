extraArgs: {}

## The name of the secret to use if pulling images from a private registry.
## Reference - https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
imagePullSecrets: {}

agent:
  ## If false, agent will not be installed
  ##
  enabled: true

  ## agent container name
  ##
  name: agent

  image:
    repository: quay.io/uswitch/kiam
    tag: v3.5
    pullPolicy: IfNotPresent

  ## agent whitelist of proxy routes matching this reg-ex
  ##
  # whiteListRouteRegexp:


  ## Logging settings
  ##
  log:
    jsonOutput: true
    level: info

  ## if true, liveness probe will fail if the agent is not
  ## able to communicate with servers, which may happen on
  ## certificate change
  ##
  deepLivenessProbe: false

  ## Host networking settings
  ##
  host:
    iptables: false
    # do not remove iptables forwarding rules when kiam-agent terminates
    # needed for RollingUpdate strategy and for security reeasons
    # see https://github.com/uswitch/kiam/issues/202 and https://github.com/uswitch/kiam/pull/253
    iptablesRemoveOnShutdown: false
    port: 8181
    interface: cali+
  ## Prometheus metrics
  ##
  prometheus:
    scrape: true
    port: 9620
    syncInterval: 5s
    servicemonitor:
      enabled: false
      path: /metrics
      interval: 10s
      labels: {}
  ## Annotations to be added to pods
  ##
  podAnnotations: {}
  ## Labels to be added to pods
  ##
  podLabels: {}
  ## Annotations to be added to service
  ##
  serviceAnnotations: {}
  ## Labels to be added to service
  ##
  serviceLabels: {}
  ## Used to assign priority to agent pods
  ## Ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
  ##
  priorityClassName: ""
  ## Strategy for DaemonSet updates (requires Kubernetes 1.6+)
  ## Ref: https://kubernetes.io/docs/tasks/manage-daemon/update-daemon-set/
  ##
  updateStrategy: OnDelete
  ## Pod DNS policy
  ## Ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pods-dns-policy
  ##
  dnsPolicy: ClusterFirstWithHostNet
  ## Node labels for pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
    # kubernetes.io/role: node
  ## Pod tolerations
  ## Ref https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## Agent container resources
  ## Ref https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ##

  # Ref: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.11/#affinity-v1-core
  # Expects input structure as per specification for example:
  #   affinity:
  #     nodeAffinity:
  #      requiredDuringSchedulingIgnoredDuringExecution:
  #        nodeSelectorTerms:
  #        - matchExpressions:
  #          - key: foo.bar.com/role
  #            operator: In
  #            values:
  #            - master
  affinity: {}

  resources: {}
  ## Additional container arguments
  ##
  extraArgs: {}
  ## Additional container environment variables
  ##

  # - name: VARNAME1
  #   value: value1
  # - name: VARNAME2
  #   valueFrom:
  #     secretKeyRef:
  #       name: existing-secret
  #       key: varname2-key
  extraEnv: []

  ## Additional container hostPath mounts
  ##
  extraHostPathMounts: []
    # - name: ssl-certs
    #   mountPath: /etc/ssl/certs
    ## Running on Amazon Linux or RHEL distros:
    #   hostPath: /etc/pki/ca-trust/extracted/pem
    ## else:
    #   hostPath: /usr/share/ca-certificates
    #   readOnly: true

  ## Agent initContainers
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ##
  initContainers: []

  ## Timeout when creating the kiam gateway
  ##
  gatewayTimeoutCreation: 1s

  ## gRPC keepalive variables
  ##
  keepaliveParams:
    time:
    timeout:
    ## gRPC keepalive ping even with no RPC
    # permitWithoutStream: true

  ## Base64-encoded PEM values for agent's CA certificate(s), certificate and private key
  ##
  tlsFiles:
    ca:
    cert:
    key:

  ## Secret name of agent's TLS certificates
  ##
  tlsSecret:

  ## Agent TLS Certificate filenames
  tlsCerts:
    certFileName: cert
    keyFileName: key
    caFileName: ca

  ## Liveness probe values
  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  ##
  livenessProbe:
    initialDelaySeconds: 3
    periodSeconds: 3
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 3

  ## SELinux labels for the container process
  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#assign-selinux-labels-to-a-container
  ##
  seLinuxOptions: {}
  #  user: system_u
  #  role: system_r
  #  ## Provides access to all files such as /etc/pki/ca-trust/extracted/pem
  #  ## Ref: https://www.systutorials.com/docs/linux/man/8-spc_selinux/
  #  ## Ref: https://danwalsh.livejournal.com/74754.html
  #  ##
  #  type: spc_t
  #  level: s0

server:
  ## If false, server will not be installed
  ##
  enabled: true

  ## server container name
  ##
  name: server

  image:
    repository: quay.io/uswitch/kiam
    tag: v3.5
    pullPolicy: IfNotPresent

  ## Run as Deployment instead of Daemonset
  ##
  deployment:
    enabled: false
    replicas: 3

  ## Logging settings
  ##
  log:
    jsonOutput: true
    level: info
  ## Prometheus metrics
  ##
  prometheus:
    scrape: true
    port: 9620
    syncInterval: 5s
    servicemonitor:
      enabled: false
      path: /metrics
      interval: 10s
      labels: {}
  ## Annotations to be added to pods
  ##
  podAnnotations: {}
  ## Labels to be added to pods
  ##
  podLabels: {}
  ## Annotations to be added to service
  ##
  serviceAnnotations: {}
  ## Labels to be added to service
  ##
  serviceLabels: {}
  ## Used to assign priority to server pods
  ## Ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
  ##
  priorityClassName: ""
  ## Strategy for DaemonSet updates (requires Kubernetes 1.6+)
  ## Ref: https://kubernetes.io/docs/tasks/manage-daemon/update-daemon-set/
  ##
  updateStrategy: OnDelete

  # Ref: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.11/#affinity-v1-core
  # Expects input structure as per specification for example:
  #   affinity:
  #     nodeAffinity:
  #      requiredDuringSchedulingIgnoredDuringExecution:
  #        nodeSelectorTerms:
  #        - matchExpressions:
  #          - key: foo.bar.com/role
  #            operator: In
  #            values:
  #            - master
  affinity: {}

  ## Node labels for pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
    # kubernetes.io/role: master
  ## Pod tolerations
  ## Ref https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## Server container resources
  ## Ref https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ##
  resources: {}
  ## Additional container arguments
  ##
  extraArgs: {}
  ## Additional container environment variables
  ##

  # - name: VARNAME1
  #   value: value1
  # - name: VARNAME2
  #   valueFrom:
  #     secretKeyRef:
  #       name: existing-secret
  #       key: varname2-key
  extraEnv: []

  # Location of SSL certs on host
  ## Running on Amazon Linux or RHEL distros:
  #   /etc/pki/ca-trust/extracted/pem
  ## else:
  #   /usr/share/ca-certificates
  sslCertHostPath: /usr/share/ca-certificates

  ## Additional container hostPath mounts
  ##
  extraHostPathMounts: []

  ## Server initContainers
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ##
  initContainers: []

  service:
    port: 443
    targetPort: 443

  ## Timeout when creating the kiam gateway
  ##
  gatewayTimeoutCreation: 1s

  ## Server probe configuration
  probes:
    serverAddress: 127.0.0.1

  ## Base64-encoded PEM values for server's CA certificate(s), certificate and private key
  ##
  tlsFiles:
    ca:
    cert:
    key:

  ## Secret name of server's TLS certificates
  ##
  tlsSecret:

  ## Base ARN for IAM roles
  ## If not specified use EC2 metadata service to detect ARN prefix
  ##
  roleBaseArn: null
  ## Pod cache settings
  ##
  cache:
    syncInterval: 1m
  ## IAM role for the server to assume
  ##
  assumeRoleArn: null
  ## Session duration for STS tokens
  ##
  sessionDuration: 15m
  ## Use hostNetwork for server
  ## Set this to true when running the servers on the same nodes as the agents
  useHostNetwork: false

  ## Agent TLS Certificate filenames
  tlsCerts:
    certFileName: cert
    keyFileName: key
    caFileName: ca

  ## Liveness and readiness probe values
  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  ##
  livenessProbe:
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    initialDelaySeconds: 3
    periodSeconds: 10
    timeoutSeconds: 10
    successThreshold: 1
    failureThreshold: 3

  ## SELinux labels for the container process
  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#assign-selinux-labels-to-a-container
  ##
  seLinuxOptions: {}
  #  user: system_u
  #  role: system_r
  #  ## Provides access to all files such as /etc/pki/ca-trust/extracted/pem
  #  ## Ref: https://www.systutorials.com/docs/linux/man/8-spc_selinux/
  #  ## Ref: https://danwalsh.livejournal.com/74754.html
  #  ##
  #  type: spc_t
  #  level: s0

rbac:
  # Specifies whether RBAC resources should be created
  create: true

psp:
  # Specifies whether PodSecurityPolicies should be created
  create: false

serviceAccounts:
  agent:
    create: true
    name:
    annotations: {}
  server:
    create: true
    name:
    annotations: {}
